[{"id":"b682a386a7cfabf2","type":"tab","label":"Flow 1","disabled":false,"info":"","env":[]},{"id":"2c2c942780b1795c","type":"nuclio-config","address":"http://nuclio-dashboard:8070","addressType":"str","publicAddress":"http://localhost:8070","publicAddressType":"str"},{"id":"00841aa6ebf7bf5c","type":"nuclio","z":"b682a386a7cfabf2","server":"2c2c942780b1795c","project":"","name":"stellar-endpoint","runtime":"python:3.11","code":"import nuclio_sdk\n\n\nasync def handler(context: nuclio_sdk.Context, event: nuclio_sdk.Event):\n    context.logger.info_with('Invoked', method=event.method)\n    \n    return {\"data\": \"Hello, from Nucliooo :(\"}","configCode":"apiVersion: \"nuclio.io/v1\"\nkind: NuclioFunction\nmetadata:\n  labels: {}\n  annotations: {}\nspec:\n  build:\n    baseImage: \"python:3.11\"\n    commands:\n     - pip install msgpack\n    # - pip install requests\n    # - pip install numpy\n    # - pip install pandas\n    \n  replicas: 3\n  minReplicas: 2\n  maxReplicas: 3\n\n\n  # env: []\n  #   - name: SOME_ENV\n  #     value: abc\n  #   - name: SECRET_PASSWORD_ENV_VAR\n  #     valueFrom:\n  #       secretKeyRef:\n  #         name: my-secret\n  #         key: password\n  volumes: []\n  #   - volume:\n  #       hostPath:\n  #         path: \"/var/run/docker.sock\"\n  #     volumeMount:\n  #       mountPath: \"/var/run/docker.sock\"\n  \n  # resources: {}\n  #   # Kubernetes Limits & Requests for the function's CPU and memory usage.\n  #   requests:\n  #     cpu: 1\n  #     memory: 128M\n  #   limits:\n  #     cpu: 2\n  #     memory: 256M\n  #     nvidia.com/gpu: 1","x":360,"y":100,"wires":[["74c2c48cf3e93984","b666aa0565646d43"],["b555300ead1af478"]]},{"id":"bdfaf26538665b21","type":"inject","z":"b682a386a7cfabf2","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"0.1","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":130,"y":180,"wires":[["00841aa6ebf7bf5c","138aefa36464a0e3"]]},{"id":"138aefa36464a0e3","type":"nuclio","z":"b682a386a7cfabf2","server":"","project":"","name":"endless-api","runtime":"python:3.11","code":"import nuclio_sdk\n\n\nasync def handler(context: nuclio_sdk.Context, event: nuclio_sdk.Event):\n    return \"asdfasdf\"","configCode":"apiVersion: \"nuclio.io/v1\"\nkind: NuclioFunction\nmetadata:\n  labels: {}\n  annotations: {}\nspec:\n  build:\n    # baseImage: \"python:3.12\"\n    commands: \n      - pip install msgpack\n    # - pip install requests\n    # - pip install numpy\n    # - pip install pandas\n    \n\n  # minReplicas: 1\n  # maxReplicas: 1\n\n  env: []\n  #   - name: SOME_ENV\n  #     value: abc\n  #   - name: SECRET_PASSWORD_ENV_VAR\n  #     valueFrom:\n  #       secretKeyRef:\n  #         name: my-secret\n  #         key: password\n  volumes: []\n  #   - volume:\n  #       hostPath:\n  #         path: \"/var/run/docker.sock\"\n  #     volumeMount:\n  #       mountPath: \"/var/run/docker.sock\"\n  \n  resources: {}\n  #   # Kubernetes Limits & Requests for the function's CPU and memory usage.\n  #   requests:\n  #     cpu: 1\n  #     memory: 128M\n  #   limits:\n  #     cpu: 2\n  #     memory: 256M\n  #     nvidia.com/gpu: 1","x":350,"y":240,"wires":[["de1d38eb3d9d324c","49e3a0c9b58974bb"],["17431214e5dee470"]]},{"id":"0cf93320e7d2daa4","type":"nuclio","z":"b682a386a7cfabf2","server":"","project":"","name":"dewlit-logic","runtime":"python:3.11","code":"import os\nimport json\nimport numpy as np\nimport onnxruntime as ort\n\n\nimport gdown\nif not os.path.isfile('model.onnx'):\n    gdown.download(\n        # 'https://drive.google.com/uc?id=1Qx9JPSaLQmpg7UNSMqVrvnMqyCImlTPX',\n        'https://drive.google.com/uc?id=1P-qbbDUtbwnGOnqx3TDIjPjQiRSbXax_',\n        'model.onnx')\n\ndef init_context(context):\n    context.user_data.model = model = ort.InferenceSession('model.onnx')\n    context.user_data.input_name = model.get_inputs()[0].name\n\ninput_length = 256\n\ndef handler(context, event):\n    model = context.user_data.model\n    input_name = context.user_data.input_name\n\n    x = event.body\n    x = x.decode('utf-8') if isinstance(x, bytes) else x\n    x = json.loads(x) if isinstance(x, str) else x\n    orig_length = len(x)\n\n    # evaluate\n    x = np.array(x, dtype=np.float32)\n    x = np.pad(x, ((input_length - len(x), 0),))\n    outputs = model.run(None, {input_name: x[None, :, None]})\n    y = np.array(outputs)[0, 0, :, 1]\n    # squash predictions for zero inputs\n    y = y * (x > 0)\n    y = np.nan_to_num(y, copy=False, nan=0.0)\n    y = y[-orig_length if orig_length else len(y):]\n\n    # return a response with the result\n    return context.Response(\n        body=json.dumps(y.tolist()),\n        headers={},\n        content_type='application/json',\n        status_code=200)","configCode":"apiVersion: \"nuclio.io/v1\"\nkind: NuclioFunction\nmetadata:\n  labels: {}\n  annotations: {}\nspec:\n  build:\n    # baseImage: \"python:3.12\"\n    commands: \n     - pip install msgpack  # currently required on Mac\n     - pip install onnxruntime gdown\n    # - pip install requests numpy pandas\n\n  # minReplicas: 1\n  # maxReplicas: 1\n\n  env: []\n  #   - name: SOME_ENV\n  #     value: abc\n  #   - name: SECRET_PASSWORD_ENV_VAR\n  #     valueFrom:\n  #       secretKeyRef:\n  #         name: my-secret\n  #         key: password\n  volumes: []\n  #   - volume:\n  #       hostPath:\n  #         path: \"/var/run/docker.sock\"\n  #     volumeMount:\n  #       mountPath: \"/var/run/docker.sock\"\n  \n  resources: {}\n  #   # Kubernetes Limits & Requests for the function's CPU and memory usage.\n  #   requests:\n  #     cpu: 1\n  #     memory: 128M\n  #   limits:\n  #     cpu: 2\n  #     memory: 256M\n  #     nvidia.com/gpu: 1","x":350,"y":480,"wires":[["7b5a1f687c486bbf","57c9a1e9cffd2055"],["9041dfd7157fe069"]]},{"id":"3a98a8274f999cfc","type":"inject","z":"b682a386a7cfabf2","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"0.1","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"[0, 0, 0, 0,10, 20, 30, 35, 40, 35]","payloadType":"json","x":110,"y":480,"wires":[["0cf93320e7d2daa4"]]},{"id":"57c9a1e9cffd2055","type":"debug","z":"b682a386a7cfabf2","name":"debug 5","active":false,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"payload","statusType":"auto","x":680,"y":500,"wires":[]},{"id":"32eb084f0412d26f","type":"nuclio","z":"b682a386a7cfabf2","server":"2c2c942780b1795c","project":"","name":"warm-matrix","runtime":"golang","code":"package main\n\nimport (\n\t\"github.com/nuclio/nuclio-sdk-go\"\n)\n\nfunc Handler(context *nuclio.Context, event nuclio.Event) (interface{}, error) {\n\tcontext.Logger.Info(\"This is an unstructured %s\", \"log\")\n\n\treturn nuclio.Response{\n\t\tStatusCode:  200,\n\t\tContentType: \"application/text\",\n\t\tBody:        []byte(\"Hello, from Nuclio golang :]\"),\n\t}, nil\n}","configCode":"apiVersion: \"nuclio.io/v1\"\nkind: NuclioFunction\nmetadata:\n  labels: {}\n  annotations: {}\nspec:\n  build:\n    commands: []\n    #- pip install msgpack  # currently required on Mac\n    # - pip install requests numpy pandas\n\n  replicas: 3\n  minReplicas: 2\n  maxReplicas: 3\n\n  env: []\n  #   - name: SOME_ENV\n  #     value: abc\n  #   - name: SOME_OTHER_ENV\n  #     valueFrom:\n  #       configMapKeyRef:\n  #         name: my-config\n  #         key: some-key\n  #   - name: SECRET_PASSWORD_ENV_VAR\n  #     valueFrom:\n  #       secretKeyRef:\n  #         name: my-secret\n  #         key: password\n  volumes: []\n  #   - volume:\n  #       hostPath:\n  #         path: \"/var/run/docker.sock\"\n  #     volumeMount:\n  #       mountPath: \"/var/run/docker.sock\"\n  \n  resources: {}\n  #   # Kubernetes Limits & Requests for the function's CPU and memory usage.\n  #   requests:\n  #     cpu: 1\n  #     memory: 128M\n  #   limits:\n  #     cpu: 2\n  #     memory: 256M\n  #     nvidia.com/gpu: 1","x":350,"y":700,"wires":[["719af31f8869d7b0","a049a8963d9ab6dc"],["cddd49dc0252dc0b"]]},{"id":"e69c096618248b3d","type":"inject","z":"b682a386a7cfabf2","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"0.1","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"4","payloadType":"num","x":110,"y":700,"wires":[["32eb084f0412d26f"]]},{"id":"719af31f8869d7b0","type":"msg-speed","z":"b682a386a7cfabf2","name":"","frequency":"sec","interval":"10","estimation":false,"ignore":false,"pauseAtStartup":false,"topicDependent":false,"x":690,"y":660,"wires":[[],[]]},{"id":"7b5a1f687c486bbf","type":"msg-speed","z":"b682a386a7cfabf2","name":"","frequency":"sec","interval":"10","estimation":false,"ignore":false,"pauseAtStartup":false,"topicDependent":false,"x":690,"y":440,"wires":[[],[]]},{"id":"74c2c48cf3e93984","type":"msg-speed","z":"b682a386a7cfabf2","name":"","frequency":"sec","interval":"10","estimation":false,"ignore":false,"pauseAtStartup":false,"topicDependent":false,"x":690,"y":40,"wires":[[],[]]},{"id":"de1d38eb3d9d324c","type":"msg-speed","z":"b682a386a7cfabf2","name":"","frequency":"sec","interval":"10","estimation":false,"ignore":false,"pauseAtStartup":false,"topicDependent":false,"x":690,"y":240,"wires":[[],[]]},{"id":"9041dfd7157fe069","type":"debug","z":"b682a386a7cfabf2","name":"debug 8","active":false,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"payload","statusType":"auto","x":680,"y":560,"wires":[]},{"id":"a049a8963d9ab6dc","type":"debug","z":"b682a386a7cfabf2","name":"debug 9","active":false,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"payload","statusType":"auto","x":680,"y":720,"wires":[]},{"id":"cddd49dc0252dc0b","type":"debug","z":"b682a386a7cfabf2","name":"debug 10","active":false,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"payload","statusType":"auto","x":680,"y":780,"wires":[]},{"id":"49e3a0c9b58974bb","type":"debug","z":"b682a386a7cfabf2","name":"debug 3","active":false,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"payload","statusType":"auto","x":680,"y":300,"wires":[]},{"id":"17431214e5dee470","type":"debug","z":"b682a386a7cfabf2","name":"debug 4","active":true,"tosidebar":true,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"payload","statusType":"auto","x":680,"y":360,"wires":[]},{"id":"b666aa0565646d43","type":"debug","z":"b682a386a7cfabf2","name":"debug 1","active":false,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"payload","statusType":"auto","x":680,"y":100,"wires":[]},{"id":"b555300ead1af478","type":"debug","z":"b682a386a7cfabf2","name":"debug 2","active":true,"tosidebar":true,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"payload","statusType":"auto","x":680,"y":160,"wires":[]}]